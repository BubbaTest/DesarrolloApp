!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self).FilePondPluginGetFile = t() }(this, function () { "use strict"; const e = e => { let t = document.createElement("span"); return t.className = "filepond--download-icon", t.title = e, t }, t = (e, t) => { alertify.alert().destroy(), alertify.alert("", "Descargando, espere un momento, Por favor...").set({ closable: !1, basic: !0 }).show(); var o = location.origin + location.pathname; o += e.file.url; var n = new XMLHttpRequest; n.open("GET", o, !0), n.responseType = "blob", n.onload = function (t) { if (200 == this.status) { var o = new Blob([this.response], { type: "application/pdf" }), n = document.createElement("a"); n.href = window.URL.createObjectURL(o), n.download = e.file.name, document.body.appendChild(n), n.click(), document.body.removeChild(n) } else { const t = document.createElement("a"), o = window.URL.createObjectURL(e.file); document.body.appendChild(t), t.style.display = "none", t.href = o, t.download = e.file.name, t.click(), window.URL.revokeObjectURL(o), t.remove() } }, n.send(), n.onreadystatechange = function () { 4 === n.readyState && alertify.alert().close() } }, o = o => { const { addFilter: n, utils: i } = o, { Type: d, createRoute: l } = i; return n("CREATE_VIEW", o => { const { is: n, view: i, query: d } = o; if (!n("file")) return; i.registerWriter(l({ DID_LOAD_ITEM: ({ root: o, props: n }) => { const { id: i } = n, l = d("GET_ITEM", i); if (!l || l.archived) return; const r = o.query("GET_LABEL_BUTTON_DOWNLOAD_ITEM"), a = o.query("GET_ALLOW_DOWNLOAD_BY_URL"); ((o, n, i, d) => { const l = n.querySelector(".filepond--file-info-main"), r = e(i); l.prepend(r), r.addEventListener("click", () => t(o, d)) })(l, o.element, r, a) } }, ({ root: e, props: t }) => { const { id: o } = t; d("GET_ITEM", o); e.rect.element.hidden })) }), { options: { labelButtonDownloadItem: ["Download file", d.STRING], allowDownloadByUrl: [!1, d.BOOLEAN] } } }; return "undefined" != typeof window && void 0 !== window.document && document.dispatchEvent(new CustomEvent("FilePond:pluginloaded", { detail: o })), o });