@{
    string addres = "Map";
}

<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: '',
        // Add other bootstrap parameters as needed, using camel case. "AIzaSyB4NyxZFy8yegCPxZdZLMD05xqO3F5dpV0"
        // Use the 'v' parameter to indicate the version to load (alpha, beta, weekly, etc.)
    });
</script>

<div class="formularioresponsive">
    <div id="titulo">Ubicación de Punto de Referencia</div>
    <form>
        <div class="row justify-content-center">
            <div class="col-75 p-2">
                <input type="text" placeholder="Ubicación" id="txtautocomplete" autocomplete="off">

            </div>
        </div>
        <div class="row justify-content-center p-4">
            <br>
            <input type="button" id="btnSuccess" onclick="test()" value="Buscar">
            <input type="button" id="btnDanger" onclick="CancelarMapa()" value="Cerrar">
        </div>
        <div class="row p-1">
            <div class="=col-md-12">
                <div id="map" style="width:95%;height:70%; position:absolute; overflow:hidden"></div>
            </div>
        </div>
    </form>
</div>

@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
@<script type="text/javascript">
     $(document).ready(function () {
         getLocation2();
     })

     function getLocation2() {
         //if (navigator.geolocation) {
         //    navigator.geolocation.getCurrentPosition(useLocation2);
         //}
         const options = {
             enableHighAccuracy: true,
             timeout: 5000,
             maximumAge: 0,
         };

         if (navigator.geolocation) {
             navigator.geolocation.getCurrentPosition(useLocation2,
                 error => console.log(error),
                 options
             )
         }
     };

     function useLocation2(position) {
         coordenadas = {
             lng: position.coords.longitude,
             lat: position.coords.latitude,
             acc: position.coords.accuracy
         }

         generarMapa(coordenadas);
     };

     async function generarMapa(coordenadas) {
         const { Map } = await google.maps.importLibrary("maps");
         //const { PlacesService } = await google.maps.importLibrary("places")
         map = new Map(document.getElementById("map"), {
             zoom: 15,
             center: { lat: coordenadas.lat, lng: coordenadas.lng },
             mapTypeControl: true,
             navigationControlOptions: {
                 style: google.maps.NavigationControlStyle.SMALL
             },
             //mapTypeId: "satellite",
         });

         var marker = new google.maps.Marker({
             map: map,
             draggable: true,
             position: { lat: coordenadas.lat, lng: coordenadas.lng }
         });

         marker.addListener('dragend', function (event) {
             document.getElementById('txtLatitud').value = this.getPosition().lat();
             document.getElementById('txtLongitud').value = this.getPosition().lng();
         })
     }

     async function test() {
         const { PlacesService } = await google.maps.importLibrary("places")

         var request = {
             query: $("#txtautocomplete").val(),
             fields: ['name', 'geometry'],
         };

         var service = new google.maps.places.PlacesService(map);

         var s = service.findPlaceFromQuery(request, function (results, status) {
             if (status === google.maps.places.PlacesServiceStatus.OK) {
                 var marker = new google.maps.Marker({
                     map: map,
                     draggable: true,
                     position: results[0].geometry.location
                 });
                 map.setCenter(results[0].geometry.location);
             }
         });
     }
</script>
, true);
}


